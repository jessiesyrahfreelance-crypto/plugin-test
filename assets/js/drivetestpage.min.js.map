{"version":3,"file":"drivetestpage.min.js","mappings":"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","sources":["webpack://wpmudev-plugin-test/webpack/bootstrap","webpack://wpmudev-plugin-test/webpack/runtime/compat get default export","webpack://wpmudev-plugin-test/webpack/runtime/define property getters","webpack://wpmudev-plugin-test/webpack/runtime/hasOwnProperty shorthand","webpack://wpmudev-plugin-test/external window [\"wp\",\"element\"]","webpack://wpmudev-plugin-test/external window [\"wp\",\"components\"]","webpack://wpmudev-plugin-test/external window [\"wp\",\"i18n\"]","webpack://wpmudev-plugin-test/external window [\"wp\",\"apiFetch\"]","webpack://wpmudev-plugin-test/./src/googledrive-page/main.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","import { createRoot, render, StrictMode, useState, useEffect, createInterpolateElement } from '@wordpress/element';\nimport { Button, TextControl, Spinner, Notice } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\n\nimport \"./scss/style.scss\"\n\nconst domElement = document.getElementById( window.wpmudevDriveTest.dom_element_id );\n\nconst WPMUDEV_DriveTest = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState(window.wpmudevDriveTest.authStatus || false);\n    const [hasCredentials, setHasCredentials] = useState(window.wpmudevDriveTest.hasCredentials || false);\n    const [showCredentials, setShowCredentials] = useState(!window.wpmudevDriveTest.hasCredentials);\n    const [isLoading, setIsLoading] = useState(false);\n    const [files, setFiles] = useState([]);\n    const [nextPageToken, setNextPageToken] = useState(null);\n    const [uploadFile, setUploadFile] = useState(null);\n    const [folderName, setFolderName] = useState('');\n    const [notice, setNotice] = useState({ message: '', type: '' });\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [isUploading, setIsUploading] = useState(false);\n    const [isCreatingFolder, setIsCreatingFolder] = useState(false);\n    const [isLoadingFiles, setIsLoadingFiles] = useState(false);\n    const [credentials, setCredentials] = useState({\n        clientId: '',\n        clientSecret: ''\n    });\n\n    // Keep the credentials form visibility in sync with current credentials state.\n    useEffect(() => {\n        setShowCredentials(!hasCredentials);\n    }, [hasCredentials]);\n\n    // Handle OAuth redirect query params: ?auth=success or ?auth=failed (or ?error=...).\n    useEffect(() => {\n        try {\n            const url = new URL(window.location.href);\n            const auth = url.searchParams.get('auth');\n            const error = url.searchParams.get('error');\n\n            if (auth === 'success') {\n                setIsAuthenticated(true);\n                showNotice(__('Successfully authenticated with Google Drive.', 'wpmudev-plugin-test'), 'success');\n                // Clean the URL\n                window.history.replaceState(null, '', url.pathname + url.hash);\n            } else if (auth === 'failed') {\n                const msg = error ? decodeURIComponent(error) : __('Authentication failed. Please try again.', 'wpmudev-plugin-test');\n                showNotice(msg, 'error');\n                window.history.replaceState(null, '', url.pathname + url.hash);\n            }\n        } catch (e) {\n            // no-op\n        }\n    }, []);\n\n    useEffect(() => {\n     }, []);\n\n    // Auto-load files once authenticated (initial mount OR when auth state flips).\n    useEffect(() => {\n        if (isAuthenticated) {\n            loadFiles(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAuthenticated]);\n\n    const showNotice = (message, type = 'success') => {\n        setNotice({ message, type });\n        setTimeout(() => setNotice({ message: '', type: '' }), 6000);\n    };\n\n    // To be implemented in tasks 2.2+.\n    // Inside WPMUDEV_DriveTest component, replace the placeholder with this:\n    const handleSaveCredentials = async () => {\n    const clientId = (credentials.clientId || '').trim();\n    const clientSecret = (credentials.clientSecret || '').trim();\n\n    if (!clientId || !clientSecret) {\n        showNotice(__('Please enter Client ID and Client Secret.', 'wpmudev-plugin-test'), 'error');\n        return;\n    }\n\n    setIsLoading(true);\n    try {\n        const res = await apiFetch({\n        path: '/' + window.wpmudevDriveTest.restEndpointSave,\n        method: 'POST',\n        headers: { 'X-WP-Nonce': window.wpmudevDriveTest.nonce },\n        data: { client_id: clientId, client_secret: clientSecret },\n        });\n\n        if (!res?.success) {\n        throw new Error(res?.message || __('Failed to save credentials.', 'wpmudev-plugin-test'));\n        }\n\n        setHasCredentials(true);\n        setShowCredentials(false);\n        setCredentials({ clientId: '', clientSecret: '' });\n        showNotice(__('Credentials saved. You can now authenticate with Google Drive.', 'wpmudev-plugin-test'), 'success');\n    } catch (e) {\n        showNotice(e?.message || __('Failed to save credentials. Please try again.', 'wpmudev-plugin-test'), 'error');\n    } finally {\n        setIsLoading(false);\n    }\n    };\n\n    const formatSize = (bytes) => {\n        if (!bytes) return '—';\n        const units = ['B','KB','MB','GB','TB'];\n        let i = 0;\n        let n = bytes;\n        while (n >= 1024 && i < units.length - 1) {\n            n /= 1024;\n            i++;\n        }\n        return `${n.toFixed( (i===0)?0:1 )} ${units[i]}`;\n    };\n\n    // 2.3: Start OAuth 2.0 flow by requesting the consent URL and redirecting.\n    const handleAuth = async () => {\n        setIsLoading(true);\n        try {\n            const result = await apiFetch({\n                path: '/' + window.wpmudevDriveTest.restEndpointAuth,\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n            });\n\n            const authUrl = result?.auth_url || result?.data?.auth_url;\n            if (!authUrl) {\n                throw new Error(__('Could not obtain authorization URL.', 'wpmudev-plugin-test'));\n            }\n\n            // Redirect the browser to Google's consent screen.\n            window.location.href = authUrl;\n        } catch (err) {\n            const msg = err?.message || __('Failed to initiate authentication.', 'wpmudev-plugin-test');\n            showNotice(msg, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const loadFiles = async (append = false, pageToken = null) => {\n        setIsLoading(true);\n        setIsLoadingFiles(true);\n        try {\n            const params = new URLSearchParams();\n            params.set('pageSize', 20);\n            if (pageToken) {\n                params.set('pageToken', pageToken);\n            }\n            const result = await apiFetch({\n                path: '/' + window.wpmudevDriveTest.restEndpointFiles + '?' + params.toString(),\n                method: 'GET',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n            });\n\n            if (!result?.success) {\n                throw new Error(result?.message || __('Failed to load files.', 'wpmudev-plugin-test'));\n            }\n\n            setNextPageToken(result.nextPageToken || null);\n            setFiles((prev) => append ? [...prev, ...result.files] : result.files);\n        } catch (e) {\n            showNotice(e?.message || __('Unable to fetch Google Drive files.', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n            setIsLoadingFiles(false);\n        }\n    };\n    const handleUpload = async () => {\n        if (!uploadFile) return;\n        // Example validation: limit to 25MB\n        const maxBytes = 25 * 1024 * 1024;\n        if (uploadFile.size > maxBytes) {\n            showNotice(__('File exceeds 25MB limit for this test.', 'wpmudev-plugin-test'), 'error');\n            return;\n        }\n\n        setIsUploading(true);\n        setUploadProgress(0);\n        setIsLoading(true);\n\n        try {\n            const formData = new FormData();\n            formData.append('file', uploadFile);\n\n            // Use XMLHttpRequest to track progress (apiFetch does not expose upload progress).\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', window.location.origin + '/wp-json/' + window.wpmudevDriveTest.restEndpointUpload);\n            xhr.setRequestHeader('X-WP-Nonce', window.wpmudevDriveTest.nonce);\n\n            xhr.upload.onprogress = (evt) => {\n                if (evt.lengthComputable) {\n                    const pct = Math.round((evt.loaded / evt.total) * 100);\n                    setUploadProgress(pct);\n                }\n            };\n\n            const response = await new Promise((resolve, reject) => {\n                xhr.onreadystatechange = () => {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status >= 200 && xhr.status < 300) {\n                            try {\n                                resolve(JSON.parse(xhr.responseText));\n                            } catch (err) {\n                                reject(err);\n                            }\n                        } else {\n                            reject(new Error(xhr.statusText || 'Upload failed'));\n                        }\n                    }\n                };\n                xhr.onerror = () => reject(new Error('Network error during upload'));\n                xhr.send(formData);\n            });\n\n            if (!response?.success) {\n                throw new Error(response?.message || __('Upload failed.', 'wpmudev-plugin-test'));\n            }\n\n            showNotice(__('File uploaded successfully.', 'wpmudev-plugin-test'), 'success');\n            setUploadFile(null);\n            setUploadProgress(0);\n            // Refresh list\n            await loadFiles(false);\n        } catch (e) {\n            showNotice(e?.message || __('File upload failed.', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsUploading(false);\n            setIsLoading(false);\n        }\n    };\n    const handleDownload = async (fileId, fileName) => {\n        if (!fileId) return;\n        setIsLoading(true);\n        try {\n            const params = new URLSearchParams();\n            params.set('file_id', fileId);\n\n            const result = await apiFetch({\n                path: '/' + window.wpmudevDriveTest.restEndpointDownload + '?' + params.toString(),\n                method: 'GET',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n            });\n\n            if (!result?.success || !result?.content) {\n                throw new Error(result?.message || __('Download failed.', 'wpmudev-plugin-test'));\n            }\n\n            const binary = atob(result.content);\n            const len = binary.length;\n            const bytes = new Uint8Array(len);\n            for (let i = 0; i < len; i++) {\n                bytes[i] = binary.charCodeAt(i);\n            }\n            const blob = new Blob([bytes], { type: result.mimeType || 'application/octet-stream' });\n            const url = URL.createObjectURL(blob);\n\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = fileName || result.filename || 'download';\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n            URL.revokeObjectURL(url);\n            showNotice(__('File downloaded.', 'wpmudev-plugin-test'), 'success');\n        } catch (e) {\n            showNotice(e?.message || __('Unable to download file.', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    const handleCreateFolder = async () => {\n        const name = (folderName || '').trim();\n        if (!name) return;\n\n        setIsCreatingFolder(true);\n        setIsLoading(true);\n        try {\n            const result = await apiFetch({\n                path: '/' + window.wpmudevDriveTest.restEndpointCreate,\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n                data: { name },\n            });\n\n            if (!result?.success) {\n                throw new Error(result?.message || __('Failed to create folder.', 'wpmudev-plugin-test'));\n            }\n\n            showNotice(__('Folder created successfully.', 'wpmudev-plugin-test'), 'success');\n            setFolderName('');\n            await loadFiles(false);\n        } catch (e) {\n            showNotice(e?.message || __('Unable to create folder.', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsCreatingFolder(false);\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <>\n            <div className=\"sui-header\">\n                <h1 className=\"sui-header-title\">\n                    { __( 'Google Drive Test', 'wpmudev-plugin-test' ) }\n                </h1>\n                <p className=\"sui-description\">\n                    { __( 'Test Google Drive API integration for applicant assessment', 'wpmudev-plugin-test' ) }\n                </p>\n            </div>\n\n            {notice.message && (\n                <Notice\n                    status={notice.type}\n                    isDismissible\n                    onRemove={() => setNotice({ message: '', type: '' })}\n                >\n                    {notice.message}\n                </Notice>\n            )}\n\n            {showCredentials ? (\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">{ __( 'Set Google Drive Credentials', 'wpmudev-plugin-test' ) }</h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    __( 'You can get Client ID from <a>Google Cloud Console</a>. Make sure to enable Google Drive API.', 'wpmudev-plugin-test' ),\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={ __( 'Client ID', 'wpmudev-plugin-test' ) }\n                                value={credentials.clientId}\n                                onChange={(value) => setCredentials({ ...credentials, clientId: value })}\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    __( 'You can get Client Secret from <a>Google Cloud Console</a>.', 'wpmudev-plugin-test' ),\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={ __( 'Client Secret', 'wpmudev-plugin-test' ) }\n                                value={credentials.clientSecret}\n                                onChange={(value) => setCredentials({ ...credentials, clientSecret: value })}\n                                type=\"password\"\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            {createInterpolateElement(\n                                __( 'Please use this URL <em>%(uri)s</em> in your Google API\\'s <strong>Authorized redirect URIs</strong> field.', 'wpmudev-plugin-test' ),\n                                {\n                                    em: <em>{ window.wpmudevDriveTest.redirectUri }</em>,\n                                    strong: <strong />,\n                                }\n                            )}\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <p><strong>{ __( 'Required scopes for Google Drive API:', 'wpmudev-plugin-test' ) }</strong></p>\n                            <ul>\n                                <li>https://www.googleapis.com/auth/drive.file</li>\n                                <li>https://www.googleapis.com/auth/drive.readonly</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleSaveCredentials}\n                                disabled={isLoading}\n                                aria-label={ __( 'Save Google Drive API credentials', 'wpmudev-plugin-test' ) }\n                            >\n                                {isLoading ? <Spinner /> : __( 'Save Credentials', 'wpmudev-plugin-test' )}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : !isAuthenticated ? (\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">{ __( 'Authenticate with Google Drive', 'wpmudev-plugin-test' ) }</h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <p>{ __( 'Please authenticate with Google Drive to proceed with the test.', 'wpmudev-plugin-test' ) }</p>\n                            <p><strong>{ __( 'This test will require the following permissions:', 'wpmudev-plugin-test' ) }</strong></p>\n                            <ul>\n                                <li>{ __( 'View and manage Google Drive files', 'wpmudev-plugin-test' ) }</li>\n                                <li>{ __( 'Upload new files to Drive', 'wpmudev-plugin-test' ) }</li>\n                                <li>{ __( 'Create folders in Drive', 'wpmudev-plugin-test' ) }</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-left\">\n                            <Button\n                                variant=\"secondary\"\n                                onClick={() => setShowCredentials(true)}\n                                aria-label={ __( 'Change Google Drive API credentials', 'wpmudev-plugin-test' ) }\n                            >\n                                { __( 'Change Credentials', 'wpmudev-plugin-test' ) }\n                            </Button>\n                        </div>\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleAuth}\n                                disabled={isLoading}\n                                aria-label={ __( 'Start Google Drive authentication', 'wpmudev-plugin-test' ) }\n                            >\n                                {isLoading ? <Spinner /> : __( 'Authenticate with Google Drive', 'wpmudev-plugin-test' )}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <>\n                    {/* File Upload Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{ __( 'Upload File to Drive', 'wpmudev-plugin-test' ) }</h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <input\n                                    type=\"file\"\n                                    onChange={(e) => setUploadFile(e.target.files[0])}\n                                    className=\"drive-file-input\"\n                                    aria-label={ __( 'Select a file to upload to Google Drive', 'wpmudev-plugin-test' ) }\n                                    disabled={isUploading}\n                                />\n                                {uploadFile && (\n                                    <p>\n                                        <strong>{ __( 'Selected:', 'wpmudev-plugin-test' ) }</strong>{' '}\n                                        {uploadFile.name} ({ Math.round(uploadFile.size / 1024) } KB)\n                                    </p>\n                                )}\n                                {isUploading && (\n                                    <div style={{ marginTop: '8px' }}>\n                                        <strong>{ __( 'Uploading...', 'wpmudev-plugin-test' ) }</strong>{' '}\n                                        {uploadProgress}%\n                                        <div style={{\n                                            height: '6px',\n                                            background: '#e2e2e2',\n                                            borderRadius: '3px',\n                                            marginTop: '4px',\n                                            overflow: 'hidden'\n                                        }}>\n                                            <div style={{\n                                                width: uploadProgress + '%',\n                                                background: '#0073aa',\n                                                height: '100%',\n                                                transition: 'width 0.25s'\n                                            }}/>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={handleUpload}\n                                    disabled={isUploading || !uploadFile}\n                                    aria-label={ __( 'Upload the selected file to Google Drive', 'wpmudev-plugin-test' ) }\n                                >\n                                    {isUploading ? <Spinner /> : __( 'Upload to Drive', 'wpmudev-plugin-test' )}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Create Folder Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{ __( 'Create New Folder', 'wpmudev-plugin-test' ) }</h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <TextControl\n                                    label={ __( 'Folder Name', 'wpmudev-plugin-test' ) }\n                                    value={folderName}\n                                    onChange={setFolderName}\n                                    placeholder={ __( 'Enter folder name', 'wpmudev-plugin-test' ) }\n                                    disabled={isCreatingFolder}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={handleCreateFolder}\n                                    disabled={isCreatingFolder || !folderName.trim()}\n                                    aria-label={ __( 'Create a new folder in Google Drive', 'wpmudev-plugin-test' ) }\n                                >\n                                    {isCreatingFolder ? <Spinner /> : __( 'Create Folder', 'wpmudev-plugin-test' )}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Files List Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{ __( 'Your Drive Files', 'wpmudev-plugin-test' ) }</h2>\n                            <div className=\"sui-actions-right\" style={{ display: 'flex', gap: '8px' }}>\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={() => loadFiles(false)}\n                                    disabled={isLoadingFiles}\n                                    aria-label={ __( 'Refresh Google Drive files list', 'wpmudev-plugin-test' ) }\n                                >\n                                    {isLoadingFiles ? <Spinner /> : __( 'Refresh Files', 'wpmudev-plugin-test' )}\n                                </Button>\n                                {nextPageToken && (\n                                    <Button\n                                        variant=\"secondary\"\n                                        onClick={() => loadFiles(true, nextPageToken)}\n                                        disabled={isLoadingFiles}\n                                        aria-label={ __( 'Load more Google Drive files', 'wpmudev-plugin-test' ) }\n                                    >\n                                        {isLoadingFiles ? <Spinner /> : __( 'Load More', 'wpmudev-plugin-test' )}\n                                    </Button>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            {isLoadingFiles && files.length === 0 ? (\n                                <div className=\"drive-loading\">\n                                    <Spinner />\n                                    <p>{ __( 'Loading files...', 'wpmudev-plugin-test' ) }</p>\n                                </div>\n                            ) : files.length > 0 ? (\n                                <div className=\"drive-files-grid\">\n                                    {files.map((file) => {\n                                        const isFolder = file.isFolder || file.mimeType === 'application/vnd.google-apps.folder';\n                                        return (\n                                            <div key={file.id} className=\"drive-file-item\">\n                                                <div className=\"file-info\">\n                                                    <strong>{file.name}</strong>\n                                                    <small>\n                                                        {isFolder\n                                                            ? __( 'Folder', 'wpmudev-plugin-test' )\n                                                            : (file.mimeType || '—')}\n                                                    </small>\n                                                    <small>\n                                                        {' · '}\n                                                        {file.modifiedTime\n                                                            ? new Date(file.modifiedTime).toLocaleString()\n                                                            : __( 'Unknown date', 'wpmudev-plugin-test' )}\n                                                        {!isFolder && file.size ? ' · ' + formatSize(file.size) : ''}\n                                                    </small>\n                                                </div>\n                                                <div className=\"file-actions\">\n                                                    {file.webViewLink && (\n                                                        <Button\n                                                            variant=\"link\"\n                                                            size=\"small\"\n                                                            href={file.webViewLink}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                            aria-label={ __( 'Open in Google Drive', 'wpmudev-plugin-test' ) }\n                                                        >\n                                                            { __( 'View in Drive', 'wpmudev-plugin-test' ) }\n                                                        </Button>\n                                                    )}\n                                                    {!isFolder && (\n                                                        <Button\n                                                            variant=\"secondary\"\n                                                            size=\"small\"\n                                                            onClick={() => handleDownload(file.id, file.name)}\n                                                            aria-label={ __( 'Download file from Google Drive', 'wpmudev-plugin-test' ) }\n                                                        >\n                                                            { __( 'Download', 'wpmudev-plugin-test' ) }\n                                                        </Button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            ) : (\n                                <div className=\"sui-box-settings-row\">\n                                    <p>{ __( 'No files found in your Drive. Upload a file or create a folder to get started.', 'wpmudev-plugin-test' ) }</p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nif ( createRoot ) {\n    createRoot( domElement ).render(<StrictMode><WPMUDEV_DriveTest/></StrictMode>);\n} else {\n    render( <StrictMode><WPMUDEV_DriveTest/></StrictMode>, domElement );\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","e","t","r","Symbol","n","iterator","toStringTag","i","c","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","bind","length","l","TypeError","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","domElement","document","getElementById","wpmudevDriveTest","dom_element_id","WPMUDEV_DriveTest","_useState2","useState","authStatus","isAuthenticated","setIsAuthenticated","_useState4","hasCredentials","setHasCredentials","_useState6","showCredentials","setShowCredentials","_useState8","isLoading","setIsLoading","_useState0","files","setFiles","_useState10","nextPageToken","setNextPageToken","_useState12","uploadFile","setUploadFile","_useState14","folderName","setFolderName","_useState16","message","type","notice","setNotice","_useState18","uploadProgress","setUploadProgress","_useState20","isUploading","setIsUploading","_useState22","isCreatingFolder","setIsCreatingFolder","_useState24","isLoadingFiles","setIsLoadingFiles","_useState26","clientId","clientSecret","credentials","setCredentials","useEffect","url","URL","location","href","auth","searchParams","error","showNotice","__","history","replaceState","pathname","hash","msg","decodeURIComponent","loadFiles","undefined","setTimeout","handleSaveCredentials","_ref","_callee","res","_t","_context","trim","apiFetch","path","restEndpointSave","method","headers","nonce","data","client_id","client_secret","success","Error","handleAuth","_ref2","_callee2","_result$data","result","authUrl","_t2","_context2","restEndpointAuth","auth_url","_ref3","_callee3","append","pageToken","params","_t3","_args3","_context3","URLSearchParams","set","restEndpointFiles","prev","concat","_toConsumableArray","handleUpload","_ref4","_callee4","formData","xhr","response","_t4","_context4","size","FormData","XMLHttpRequest","open","origin","restEndpointUpload","setRequestHeader","upload","onprogress","evt","lengthComputable","pct","Math","round","loaded","total","reject","onreadystatechange","readyState","status","JSON","parse","responseText","err","statusText","onerror","send","handleDownload","_ref5","_callee5","fileId","fileName","binary","len","bytes","blob","_t5","_context5","restEndpointDownload","content","atob","Uint8Array","charCodeAt","Blob","mimeType","createObjectURL","createElement","download","filename","body","appendChild","click","remove","revokeObjectURL","_x","_x2","handleCreateFolder","_ref6","_callee6","_t6","_context6","restEndpointCreate","React","Fragment","className","Notice","isDismissible","onRemove","TextControl","help","createInterpolateElement","target","rel","label","onChange","_objectSpread","em","redirectUri","strong","Button","variant","onClick","disabled","Spinner","style","marginTop","height","background","borderRadius","overflow","width","transition","placeholder","display","gap","map","file","isFolder","id","modifiedTime","Date","toLocaleString","units","toFixed","formatSize","webViewLink","createRoot","render","StrictMode"],"sourceRoot":""}